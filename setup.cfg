[metadata]
name = dao-analyzer
# version from setuptools_scm (see setup.py)
author = David DavÃ³
author_email = ddavo@ucm.es
description = "A tool to monitor DAO activity"
long_description = file: README.md
long_description_content_type = text/markdown
url = https://dao-analyzer.science
project_urls =
  Source = https://github.com/Grasia/dao-analyzer
  Bug Tracker = https://github.com/Grasia/dao-analyzer/issues
  Changelog = https://github.com/Grasia/dao-analyzer/blob/master/CHANGELOG.md
classifiers =
  Development Status :: 5 - Production/Stable
  Environment :: Console
  Environment :: Web Environment
  Framework :: Dash
  Intended Audience :: Science/Research
  License :: OSI Approved :: GNU General Public License v3 (GPLv3)
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Topic :: Scientific/Engineering :: Visualization
  Topic :: Sociology
  Typing :: Typed
  Topic :: Utilities

[options]
# packages and package_dir in setup.py
python_requires = >= 3.8
install_requires =
  dao-scripts == 1.1.9
  # Waiting for plotly/dash#2251 to be fixed
  dash >= 2.5.0, <2.6.0
  dash-bootstrap-components >= 1.1.0
  Werkzeug < 2.1.0 # Waiting for upstream fix on dash part
  flask >= 2.0.2
  gql >= 3.0.0a1
  millify >= 0.1.1
  numpy >= 1.17.3
  pandas >= 1.3.4
  portalocker >= 2.3.2
  pyarrow >= 6.0.0
  requests >= 2.26.0
  requests-cache >= 0.8.1
  requests-toolbelt >= 0.9.1
  tenacity >= 8.0.0
  tqdm >= 4.62.3
  plotly-calplot == 0.1.13

[options.package_data]
dao_analyzer.web = 
  assets/*
dao_analyzer.cache_scripts = 
  *.json
  */*.json
dao_analyzer_components =
  metadata.json
  package-info.json
  dao_analyzer_components.min.js
  dao_analyzer_components.min.js.map
  dao_analyzer_components.css

[options.entry_points]
console_scripts =
  daoa-server = dao_analyzer.web.app:main

[options.extras_require]
docker =
  gunicorn >= 20.1.0
  kaggle >= 1.5.12
  zenodo-client >= 0.3.0
dev =
  build
  pytest
  hypothesis
  flake8
  pandas-vet
  twine
  dash[dev,testing]
  pytest
  hypothesis
  pandas-vet
  selenium

[flake8]
ignore = 
    # Everything related to indentation
    E1, 
    # Everything related to whitespace
    E2,
    # Blank lines
    E3,
    # Line too long
    E501,
    # Indentation warning
    W1,
    # Whitespace warning
    W2,
    # Blank line warning
    W3,
    # Line break warning
    W5,
    # Disabled until they fix false positives
    PD005,
    # Disabled until they fix false positives
    PD011,
    # 'df' is a bad variable name. Dont care.
    PD901, 
exclude = 
    venv,
    __pycache__,
    .*,
    dist
max-complexity  = 10
max-line-length = 100

[tox:tox]
envlist = py{38,39,310,311}

[testenv]
deps = .[dev]
wheel_build_env = build
commands = 
  pytest

[testenv:build]

[testenv:lint]
deps = flake8
commands =
  flake8 .

[gh-actions]
python =
  3.8: py38
  3.9: py39
  3.10: py310
  3.11: py311
